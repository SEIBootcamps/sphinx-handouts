[tool.poetry]
name = "sphinx-handouts"
version = "1.0.0"
description = ""
license = "MPL-2.0"
authors = ["Ashley Trinh <itsashley@hey.com>"]
readme = "README.md"
packages = [{include = "sphinx_handouts", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.8,<4"
sphinx = ">=6,<8"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.3"
pre-commit = "^3.5.0"
python-semantic-release = "^8.3.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
myst-parser = "^2.0.0"
pytest = "^7.4.3"

[tool.poetry.group.lsp]
optional = true

[tool.poetry.group.lsp.dependencies]
esbonio = "*"



[tool.poetry.group.buildlocal.dependencies]
sphinx-bootcampstrap = {path = "../sphinx-bootcampstrap"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"
version_variables = ["src/sphinx_handouts/__init__.py:__version__"]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

